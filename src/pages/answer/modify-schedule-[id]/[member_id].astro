---
import Layout from '../../../layouts/Layout.astro';
const { id } = Astro.params;
const { member_id } = Astro.params;
---

<Layout title="出欠情報更新ページ">
  <main id="id-transfer" data-message={id}>
    <h1>日程修正ページ</h1>
    <div id="memberID-transfer" data-message={member_id}></div>
    <!-- <p>日程修正部分</p> -->
    <div style="margin: auto;text-align: left;" >
      <h3>イベント名</h3>
      <div id="event_name"></div>
      <hr>
      <h3>イベント詳細説明</h3>
      <div id="event_detail"></div>
      <hr>
      <h3>日にち候補</h3>
      <h5>※各自の出欠状況を変更するには名前のリンクをクリックしてください。</h5>
      <div id="date_list_container"></div>
      <p>出欠を入力する</p>
      <hr>
      <label>名前</label><br/>
      <label>絵文字は使用出来ません</label><br/>
      <input type="text" id="username" style="width:500px;height:30px" required><br/>
      <label>日にち候補</label><br/>
      <div id="date_option_container" style="text-align: center;"></div>
      <label>コメント</label><br/>
      <input type="text" id="comment" style="width:500px;height:30px">
      <p style="text-align: center;">
        <button id="updateButton" style="width:100px;height:30px">更新</button>
      </p>
    </div>
  </main>
</Layout>

<style>
  main {
    margin: auto;
    padding: 1rem;
    width: 800px;
    max-width: calc(100% - 2rem);
    background-color: white;
    color: black;
    font-size: 20px;
    line-height: 1.6;
  }
  h1 {
    font-size: 2rem;
    font-weight: bold;
    margin-bottom: 1em;
  }
</style>

<script>

    const id = document.getElementById("id-transfer").getAttribute("data-message");

    const member_id = document.getElementById("memberID-transfer").getAttribute("data-message");

    document.getElementById('updateButton').addEventListener('click', () => {

      updateSchedule();
      window.location.href = `/answer/show-schedule-result-${id}`;
    });


    window.onload = async function(){

        const pathname = window.location.pathname; 

        const filename = pathname.substring(pathname.lastIndexOf("/",pathname.lastIndexOf("/")-1)+1); 

        // イベントNoを取得する
        const event_no =  filename.substring(16, filename.lastIndexOf("/"));

        //メンバーIDを取得する
        const meme_id = pathname.substring(pathname.lastIndexOf("/")+1); 
        const getEventDateInfoResponse = await fetch('/api/geteventdateinfo', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                  event_no: event_no
                })
        });

        const EventDateInfo = await getEventDateInfoResponse.json();

        const geteventinfo = await fetch('/api/geteventinfo',{
          method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                  event_no: event_no
                })
        });

        const EventInfo = await geteventinfo.json();
        const getattendmemberinfo = await fetch ('/api/getattendmemberinfo',{
          method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                  event_no: event_no
                })
        });

        const AttendMemberInfo = await getattendmemberinfo.json();

        const geteventmember = await fetch ('/api/geteventmember',{
          method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                  event_no: event_no
                })
        });

        const EventMember = await geteventmember.json();

        const filterResult = filterByName(meme_id,EventMember);

        const member_name = filterResult[0]["member_name"];



        let event_name = document.getElementById("event_name");
        event_name.innerText = EventInfo[0]["event_name"];

        let event_detail = document.getElementById("event_detail");
        event_detail.innerText = EventInfo[0]["event_memo"];


    

        //日にち候補の生成
        let date_option_container = document.getElementById("date_option_container");

        let i = 0;

        EventDateInfo.forEach(function(record){
     
            let para = document.createElement("p");
            let span = document.createElement("span");
            span.style.width = "300px";
            span.style.display= "inline-block";
            let node = document.createTextNode(record["schedule_name"]);

            let pulldownList = document.createElement("select");
            pulldownList.style.width = "40px";
            pulldownList.style.height = "25px";
            pulldownList.setAttribute("id", "select-id-"+i.toString());

            let apply_option = document.createElement("option");
            apply_option.setAttribute("value", "0");
            apply_option.text="○";
            let unkown_option = document.createElement("option");
            unkown_option.setAttribute("value", "1");
            unkown_option.text= "△";
            let deny_option = document.createElement("option");
            deny_option.setAttribute("value", "2");
            deny_option.text = "×";

            span.appendChild(node);

            pulldownList.add(apply_option);
            pulldownList.appendChild(unkown_option);
            pulldownList.appendChild(deny_option);


            para.appendChild(span);       
            para.appendChild(pulldownList);

            date_option_container.appendChild(para);

            i++;
        });

        // 日にち候補一覧の作成
        createTable(EventDateInfo,member_name,AttendMemberInfo);


    };

// 日にち候補一覧の作成
    function createTable(EventDateInfo,member_name,AttendMemberInfo){

      let date_list_container = document.getElementById("date_list_container");

      let table = '<table border=1 width="500">';

      let title = '<tr><td>日程</td><td>○</td><td>△</td><td>×</td><td>'+member_name+'</td></tr>';
        
      table += title;

      //row
      for(let i=0; i < EventDateInfo.length; i++){
          table += '<tr>';
          //column
          for(let j = 0; j< 5; j++ ){
            if(j == 0){
              table += "<td>" + EventDateInfo[i]["schedule_name"]+ "</td>";
            }

            if(j == 1){
              table += "<td>" + getScheduleJoinInfo(EventDateInfo[i]["schedule_id"],'0',AttendMemberInfo).length + "</td>";
            }

            if(j == 2){
              table += "<td>" + getScheduleJoinInfo(EventDateInfo[i]["schedule_id"],'1',AttendMemberInfo).length + "</td>";
            }

            if(j == 3){
              table += "<td>" + getScheduleJoinInfo(EventDateInfo[i]["schedule_id"],'2',AttendMemberInfo).length + "</td>";
            }

            if(j == 4){
              let orderJoinReslut = getOrderJoinInfo(EventDateInfo[i]["schedule_id"],member_id,AttendMemberInfo);

              if(orderJoinReslut[0]["member_attendance"] == 0){
                table += "<td>" + '○' + "</td>";
              }
              else if (orderJoinReslut[0]["member_attendance"] == 1){
                table += "<td>" + '△' + "</td>";
              }
              else if(orderJoinReslut[0]["member_attendance"] == 2){
                table += "<td>" + '×' + "</td>";
              }

            }
          }
      }

      let command = '<tr><td>コメント</td><td></td><td></td><td></td><td></td></tr>'

      table += command;

      table += '</table>';
      date_list_container.innerHTML = table;

    }

    // 参加メンバーの名前を取得
    function filterByName(filterObj , Obj){

      return Obj.filter(item => item.member_id == filterObj)

    }

    // 参加メンバーの出欠状況を取得
    function getOrderJoinInfo(filterObj1 ,filterObj2, Obj){

      return Obj.filter(item => item.schedule_id == filterObj1 || item.member_id == filterObj2)

    }

    // 各日程の参加者取得
    function getScheduleJoinInfo(filterObj1 ,filterObj2 , Obj){

      return Obj.filter(item => item.schedule_id == filterObj1 && item.member_attendance == filterObj2)

    }

    async function updateSchedule(){

      const memberName = (document.getElementById("username") as HTMLInputElement).value;
      const commandText = (document.getElementById("comment") as HTMLInputElement).value;

      let updateDatas= [];
      let i = 0;
      let mydate = new Date();
      let today = mydate.toLocaleDateString();

      while(document.getElementById("select-id-" + i)){

          let ele = (document.getElementById("select-id-" + i) as HTMLInputElement).value;

          let data = {};
          data["member_id"] = member_id;
          data["schedule_id"] = i.toString();
          data["member_attendance"] = ele;
          data["attendance_info_update_time"] = today;    
          data["event_no"] = id;
          updateDatas.push(data);
          i++;
      }

      updateAttendMbemberInfo(updateDatas);

    }

    async function updateAttendMbemberInfo(updateDatas){

      const updateattendmemberinfoResponse = await fetch('/api/updateattendmemberinfo',{
        method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(
                  updateDatas
                )
      });
    }

</script>
