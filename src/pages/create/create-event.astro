---
import Layout from '../../layouts/Layout.astro';
---

<Layout title="Create an Event">
<main>
    <h2 class="title">調整くん</h2>
    <form id="eventForm" class="form">
        <div class="step-container">
            <div class="step1">
                <div class="step-title">
                    <div class="space">
                        <label for="eventName">Step1)イベント名</label> 
                        <br>
                        <span>※忘年会、打ち合わせなど</span>
                    </div>
                    <input type="text" id="eventName" size="32" name="eventName" placeholder="ソフトウェア開発部お花見" required />
                </div> 
                <div class="space">
                    <label for="eventMemo">メモ（任意）</label>
                    <br>
                    <span>※飲み会の日程調整をしましょう！</span>
                </div>
                <textarea rows="10" cols="25" id="eventMemo" name="eventMemo" placeholder="ソフトウェア開発部でお花見をしましょう♩" required></textarea>
            </div>

            <div class="step2">
                <div class="step-title">
                    <label for="eventName">Step2)日程候補</label>
                    <br>
                    <span>※候補日程/日時を入力してください</span>
                    <br>
                    <span>候補の区切りは改行で判断されます。</span>
                    <br>
                </div>

                <div class="date-picker" >
                    <div class="sample">
                        <span>例:</span>
                        <br>
                        <div class="space">
                            <span>8/7(月)20:00〜</span>
                            <br>
                            <span>8/8(火)20:00〜</span>
                            <br>
                            <span>8/9(水)21:00〜</span>
                            <br>
                        </div>
                        <textarea
                            rows="10" cols="25"
                            id="eventDate"
                            name="eventDate"
                            placeholder="8/7(月)20:00〜\n8/8(火)20:00〜\n8/9(水)21:00〜"
                            required
                        />
                    </div>
                    <div>
                        <span>↓日付をクリックすると日程に日時が入ります。</span><br>
                        <input type="date" name="" id="">   
                    </div>
                </div>

            </div>
            <input type="date" id="eventDates" name="eventDates" />
            <textarea id="selectedDates" rows="5" cols="25" placeholder="追加された日程がここに表示されます"></textarea>
        </div>

        <div class="button-conteiner">
            <button class="submit-button" type="submit">イベント作成</button>
        </div>
    </form>
</main>
    
</Layout>

<style>
    main {
      margin: auto;
      padding: 1rem;
      width: 800px;
      max-width: calc(100% - 2rem);
      background-color: rgb(255, 255, 255);
      color: black;
      line-height: 1.6;
    }
    label {
        font-weight: bold;
        font-size: 16px;
    }

    .title {
        font-size: 2rem;
        font-weight: bold;
        margin-bottom: 8px;
    }
    .step-container {
        display: flex;  
    } 
    .step1, step2 {
        margin-bottom: 16px;
        padding-right: 16px;     
    }
    .step-title {
        padding-bottom: 8px;
    }
    .date-picker {
        display: flex;
    }
    .sample{
        padding-right: 48px; 
    }
    .space{
        padding-left: 8px
    }
    .button-conteiner {
        text-align: center;
    }
    .submit-button{
        border-radius: 4px;
        padding: 4px 56px;
        font-size: 18px;
        background-color: rgb(255, 255, 255);
    }

  </style>


<script type="module">
    const getCurrentTimestamp = () => new Date().toISOString();
    const eventForm = document.getElementById('eventForm');
    const dateInput = document.getElementById('eventDates');
    const selectedDates = document.getElementById('selectedDates');

    dateInput.addEventListener('change', () => {
        if (dateInput.value) {
            const dateValue = `${dateInput.value}\n`;
            selectedDates.value += dateValue;
            dateInput.value = ''; // Clear the input after adding
        }
    });

    eventForm.addEventListener('submit', async (event) => {
        event.preventDefault();
        const formData = new FormData(event.target);
        const eventName = formData.get('eventName');
        const eventMemo = formData.get('eventMemo');
        const eventDates = selectedDates.value.trim().split('\n');

        const eventCreateTime = new Date().toISOString();

        const createResponse = await fetch('/api/createevent', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                event_name: eventName,
                event_memo: eventMemo,
                event_create_time: eventCreateTime,
            })
        });

        const createData = await createResponse.json();

        if (createResponse.ok) {
            const eventNo = createData[0].event_no;
            const dateResponse = await fetch(`/api/addeventdates/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    event_no: eventNo,
                    event_dates: eventDates,
                })
            });

            if (dateResponse.ok) {
                window.location.href = `/create/show-event-url-${eventNo}`;
            } else {
                console.error('Error adding event dates:', await dateResponse.json());
            }
        } else {
            console.error('Error creating event:', createData.error);
        }
    });
</script>
